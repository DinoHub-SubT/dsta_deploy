# setup the transfer
- hostname
- pwd
- 'export YELLOW="\033[1;33m"'
- 'export BLUE="\033[1;36m"'
- 'export LOCAL_DEPLOY_PATH=/home/$USER/deploy_ws/src'
- 'export copy_opts="-avzh" '

###################################################################################################
- planning-pc:
###################################################################################################
  # == user can modify ==
  
  # connections
  - 'export host=planning-pc'
  - 'export user=robot'
  
  # rsynch options
  - 'export REMOTE_DEPLOY_PATH=/home/$user/deploy_ws/'
  - export copy_to="rsync $copy_opts $LOCAL_DEPLOY_PATH $user@$host:$REMOTE_DEPLOY_PATH"
  - export copy_from="rsync $copy_opts $$user@$host:$REMOTE_DEPLOY_PATH $LOCAL_DEPLOY_PATH "
  # == user can modify done. ==

  ####################################################
  # perform actual transfer. do not change.
  ####################################################
  - print:
    # print
    - echo -e "\n${YELLOW}\t local deploy path -> \t $LOCAL_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t remote deploy path -> \t $REMOTE_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t host -> \t $host \n" ;
    - echo -e "\n${YELLOW}\t username -> \t $user \n" ;
    - echo -e "\n${YELLOW}\t copy TO -> \t $copy_to \n"
    - echo -e "\n${YELLOW}\t copy FROM -> \t $copy_from \n"

  - transfer:
    - echo -e "\n${YELLOW}\t local deploy path -> \t $LOCAL_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t remote deploy path -> \t $REMOTE_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t host -> \t $host \n" ;
    - echo -e "\n${YELLOW}\t username -> \t $user \n" ;
  
    # transfer TO remote host
    - to:
        # create the remote directory
        - ssh $user@$host "mkdir -p $REMOTE_DEPLOY_PATH"
        # copy command
        - 'export copy_cmd=$copy_to'
      
    # transfer FROM remote host
    - from:
      # create the remote directory
      - ssh $user@$host "mkdir -p $REMOTE_DEPLOY_PATH"
      - 'export copy_cmd=$copy_from'

    # evaluate copy
    - echo -e "\n${YELLOW}\t copy command -> \t $copy_cmd \n"
    - eval $copy_cmd

  # delete from remote host
  - delete:
    - ssh $user@$host "rm -rf $REMOTE_DEPLOY_PATH"

###################################################################################################
- nuc:
###################################################################################################
  # == user can modify ==

  # connections
  - 'export host=nuc'
  - 'export user=nuc'
  - 'export JUMP_HOST=robot@planning-pc'

  # rsynch options
  - 'export REMOTE_DEPLOY_PATH=/home/nuc/deploy_ws/'
  - export copy_to="rsync $copy_opts $LOCAL_DEPLOY_PATH -e 'ssh $JUMP_HOST ssh' $user@$host:$REMOTE_DEPLOY_PATH"
  # TODO: copy_from

  # == user can modify done. ==

  ####################################################
  # perform actual transfer. do not change.
  ####################################################
  - print:
    # print
    - echo -e "\n${YELLOW}\t local deploy path -> \t $LOCAL_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t remote deploy path -> \t $REMOTE_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t host -> \t $host \n" ;
    - echo -e "\n${YELLOW}\t username -> \t $user \n" ;
    - echo -e "\n${YELLOW}\t transfer to -> \t $copy_to \n" ;

  - transfer:
    - echo -e "\n${YELLOW}\t local deploy path -> \t $LOCAL_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t remote deploy path -> \t $REMOTE_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t host -> \t $host \n" ;
    - echo -e "\n${YELLOW}\t username -> \t $user \n" ;
    
    # transfer TO remote host
    - to:
      # create the remote directory
      - ssh $JUMP_HOST ssh $user@$host "mkdir -p $REMOTE_DEPLOY_PATH"
      # copy command
      - 'export copy_cmd=$copy_to'

    # transfer FROM remote host
    - from:
      # TODO:
      - 'export copy_cmd=$copy_to'

    # evaluate copy
    - echo -e "\n${YELLOW}\t copy command -> \t $copy_cmd \n"
    - eval $copy_cmd


###################################################################################################
- xavier:
  # == user can modify ==

  # connections
  - 'export host=nuc'
  - 'export user=nuc'
  - 'export JUMP_HOST=nvidia@xavier'

  # rsynch options
  - 'export REMOTE_DEPLOY_PATH=/home/nuc/deploy_ws/'
  - export copy_to="rsync $copy_opts $LOCAL_DEPLOY_PATH -e 'ssh $JUMP_HOST ssh' $user@$host:$REMOTE_DEPLOY_PATH"
  # TODO: copy_from

  # == user can modify done. ==

  ####################################################
  # perform actual transfer. do not change.
  ####################################################
  - print:
    # print
    - echo -e "\n${YELLOW}\t local deploy path -> \t $LOCAL_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t remote deploy path -> \t $REMOTE_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t host -> \t $host \n" ;
    - echo -e "\n${YELLOW}\t username -> \t $user \n" ;
    - echo -e "\n${YELLOW}\t transfer to -> \t $copy_to \n" ;

  - transfer:
    - echo -e "\n${YELLOW}\t local deploy path -> \t $LOCAL_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t remote deploy path -> \t $REMOTE_DEPLOY_PATH \n" ;
    - echo -e "\n${YELLOW}\t host -> \t $host \n" ;
    - echo -e "\n${YELLOW}\t username -> \t $user \n" ;
    
    # transfer TO remote host
    - to:
      # create the remote directory
      - ssh $JUMP_HOST ssh $user@$host "mkdir -p $REMOTE_DEPLOY_PATH"
      # copy command
      - 'export copy_cmd=$copy_to'

    # transfer FROM remote host
    - from:
      # TODO:
      - 'export copy_cmd=$copy_to'

    # evaluate copy
    - echo -e "\n${YELLOW}\t copy command -> \t $copy_cmd \n"
    - eval $copy_cmd

