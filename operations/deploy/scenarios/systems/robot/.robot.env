# //////////////////////////////////////////////////////////////////////////////
# Declare docker-compose host IPs for 'Azure' configuration
# - setup default IPs
# - only set those that are needed, keep missing IPs as the default values
# //////////////////////////////////////////////////////////////////////////////

# //////////////////////////////////////////////////////////////////////////////
# == Basestation ==
# //////////////////////////////////////////////////////////////////////////////

export BASESTATION_IP="10.3.1.1"
export BASESTATION_HOSTNAME="system76-pc"
export BASESTATION_GPU_ENABLE_TYPE="x86-gpu"

export BASESTATION2_IP="10.3.1.66"
export BASESTATION2_HOSTNAME="subt"
export BASESTATION_GPU_ENABLE_TYPE="x86-gpu"

export JOHN1_IP="10.3.1.101"
export JOHN2_IP="10.3.1.60"
export JOHN1_HOSTNAME="john-laptop"
export JOHN2_HOSTNAME="john-pc"

# //////////////////////////////////////////////////////////////////////////////
# == UGV (internal) ==
# //////////////////////////////////////////////////////////////////////////////

# export PPC_IP="10.3.1.11"
export PPC_IP="192.168.2.9"
export PPC_HOSTNAME="ugv1"

export NUC_IP="192.168.2.10"
export NUC_HOSTNAME="nuc"

export XAVIER_IP="192.168.2.11"
export XAVIER_HOSTNAME="xavier"

# //////////////////////////////////////////////////////////////////////////////
# == UGV (external) ==
# //////////////////////////////////////////////////////////////////////////////

# UGV1
export UGV1_IP="10.3.1.11"
export UGV1_HOSTNAME="ugv1"

# UGV2
export UGV2_IP="10.3.1.12"
export UGV2_HOSTNAME="ugv2"

# UGV3
export UGV3_IP="10.3.1.13"
export UGV3_HOSTNAME="ugv3"

# //////////////////////////////////////////////////////////////////////////////
# == UAV (external) ==
# //////////////////////////////////////////////////////////////////////////////

# UAV1
export UAV1_IP="10.3.1.51"
export UAV1_HOSTNAME="ds1"

# UAV2
export UAV2_IP="10.3.1.52"
export UAV2_HOSTNAME="ds2"

# UAV3
export UAV3_IP="10.3.1.53"
export UAV3_HOSTNAME="ds3"

# UAV4
export UAV4_IP="10.3.1.54"
export UAV4_HOSTNAME="ds4"

# //////////////////////////////////////////////////////////////////////////////
# Other Shared Configurations
# //////////////////////////////////////////////////////////////////////////////

# docker compose base service type
export DOCKER_COMPOSE_BASE_SERVICE="robot"

# export host type, for robots/*env files to read from
export DEPLOY_SYSTEM_TYPE="robot"

# Setup to enable nvidia gpu passthrough
export GPU_ENABLE_TYPE="non-gpu"

# //////////////////////////////////////////////////////////////////////////////
# deployer environment configuration variables
# //////////////////////////////////////////////////////////////////////////////

export deploy_rsync_opts="
  --exclude=src/operations/deploy/docker/dockerfiles/thirdparty-software/
  --exclude=src/ugv/slam/devel/loam_velodyne_16
  --exclude=src/ugv/slam/devel/velodyne_driver_16_32"

# check if directory exists
dir_exists() {
  [[ -d $1 ]] && return 0
  return 1
}

# check if directory contains contents
dir_empty() {
  [ -z "$(ls -A ${SUBT_PATH}/$1)" ] && return 0
  return 1
}

# setup ugv, transfer slam modules, if the slam directory contains contents
# TODO: make this cleaner...
if  dir_exists ugv && dir_exists ugv/slam \
    && ! dir_empty ugv/slam/devel/rosmon \
    && ! dir_empty ugv/slam/devel/online_pose_graph \
    && ! dir_empty ugv/slam/robot/laser_odometry  ; then
  echo "UGV Slam directory is not empty, transferring.";
else
  # append slam transfer, exclude option
  export deploy_rsync_opts="$deploy_rsync_opts
  --exclude=src/ugv/slam/"
  POST_TRANSFER_SETUPS_WARNINGS="WARNING: UGV Slam directory is empty on the basestation laptop. Not transferring. Please clone slam repos to enable slam transfer.";
fi
