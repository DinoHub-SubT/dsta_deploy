# //////////////////////////////////////////////////////////////////////////
- docker:
# //////////////////////////////////////////////////////////////////////////

  # ////////////////////////////////////////////////////////////////////////////
  - registry:
  # ////////////////////////////////////////////////////////////////////////////

    # //////////////////////////////////////////////////////////////////////////
    - azure:
    # //////////////////////////////////////////////////////////////////////////
      # use default docker context
      - docker context use $DCTX
      - pull:
        - core:
          # pull from the azure registry
          - docker pull $AZURE_REGISTRY/subt-uav-$deploy_system_type-ros
          - docker pull $AZURE_REGISTRY/subt-uav-$deploy_system_type-uav
          - docker tag  $AZURE_REGISTRY/subt-uav-$deploy_system_type-ros subt/uav-$deploy_system_type:ros
          - docker tag  $AZURE_REGISTRY/subt-uav-$deploy_system_type-uav subt/uav-$deploy_system_type:uav
        - perception:
          - docker pull $AZURE_REGISTRY/subt-uav-$deploy_system_type-ros-perception
          - docker pull $AZURE_REGISTRY/subt-uav-$deploy_system_type-perception
          - docker tag  $AZURE_REGISTRY/subt-uav-$deploy_system_type-ros-perception  subt/uav-$deploy_system_type:ros-perception
          - docker tag  $AZURE_REGISTRY/subt-uav-$deploy_system_type-perception      subt/uav-$deploy_system_type:perception
        - super:
          - docker pull $AZURE_REGISTRY/subt-uav-$deploy_system_type-superodometry
          - docker tag  $AZURE_REGISTRY/subt-uav-$deploy_system_type-superodometry subt/uav-$deploy_system_type:superodometry

      # remove the azure docker images
      - docker rmi $(docker images | grep $AZURE_REGISTRY | tr -s ' ' | cut -d ' ' -f 1)
      # show the docker images
      - docker images
      # change the docker context back to the default docker daemon
      - docker context use default

    # //////////////////////////////////////////////////////////////////////////
    - basestation:
    # //////////////////////////////////////////////////////////////////////////
      # use default docker context
      - docker context use default
      - docker context ls
      - pull:
        - core:
          # tag the local images as basestation registry
          - docker tag subt/uav-$deploy_system_type:ros $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros
          - docker tag subt/uav-$deploy_system_type:uav $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-uav
          # push to local basestation docker registry
          - docker push $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros
          - docker push $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-uav
          # change the docker context to the uav azure docker daemon
          - docker context use $DCTX
          # pull the uav docker images from the laptop local registry to the robot
          - docker pull $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros
          - docker pull $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-uav
          # tag the uav docker images on the robot
          - docker tag $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros subt/uav-$deploy_system_type:ros
          - docker tag $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-uav subt/uav-$deploy_system_type:uav

        - perception:
          # tag the local images as basestation registry
          - docker tag subt/uav-$deploy_system_type:ros-perception  $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros-perception
          - docker tag subt/uav-$deploy_system_type:perception      $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-perception
          # push to local basestation docker registry
          - docker push $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros-perception
          - docker push $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-perception
          # change the docker context to the uav azure docker daemon
          - docker context use $DCTX
          # pull the uav docker images from the laptop local registry to the robot
          - docker pull $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros-perception
          - docker pull $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-perception
          # tag the uav docker images on the robot
          - docker tag $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-ros-perception  subt/uav-$deploy_system_type:ros-perception
          - docker tag $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-perception      subt/uav-$deploy_system_type:perception

        - super:
          # tag the local images as basestation registry
          - docker tag subt/uav-$deploy_system_type:superodometry $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-superodometry
          # push to local basestation docker registry
          - docker push $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-superodometry
          # change the docker context to the uav azure docker daemon
          - docker context use $DCTX
          # pull the uav docker images from the laptop local registry to the robot
          - docker pull $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-superodometry
          # tag the uav docker images on the robot
          - docker tag $BASESTATION_REGISTRY/subt-uav-$deploy_system_type-superodometry subt/uav-$deploy_system_type:superodometry

      # remove the basestation docker images (on the current docker context)
      - docker rmi $(docker images | grep $BASESTATION_REGISTRY | tr -s ' ' | cut -d ' ' -f 1)

      # show the docker images
      - docker images
      # change the docker context back to the default docker daemon
      - docker context use default

      # remove the basestation docker images
      - docker rmi $(docker images | grep $BASESTATION_REGISTRY | tr -s ' ' | cut -d ' ' -f 1)
