# //////////////////////////////////////////////////////////////////////////
- docker:
# //////////////////////////////////////////////////////////////////////////

  # == build the chonky base ==
  - chonky:
    - cd $SUBT_PATH/$dcompose_relpath
    - thirdparty:
      - cd dockerfiles/thirdparty-software
      - "[ -e aarch64-linux-gnu ] || ./populate_aarch64.sh"
      - "[ -e cuda ] || ./populate_cuda.sh"
    - build_image: # build_image instead of image so regex doesn't do anything stupid
      - docker build -t subt/chonky_l4t -f dockerfiles/perception/services/arm/chonky-base.dockerfile ./dockerfiles
    - clean:
      - cd dockerfiles/thirdparty-software
      - rm -rf aarch64-linux-gnu
      - rm -rf cuda

  # == creating docker images ==
  - image:
    - docker-compose-wrapper $scenario build --force-rm ros-$deploy_system_type-image
    - docker-compose-wrapper $scenario build --force-rm perception-$deploy_system_type-image
    # - docker-compose-wrapper $scenario build --force-rm perception-$deploy_system_type-image-realsense-220
    # - docker-compose-wrapper $scenario build --force-rm perception-$deploy_system_type-image-realsense-235
    # ignore any error messages (in case there are no dangling images)
    - docker rmi -f $(docker images -f "dangling=true" -q) 2&1> /dev/null

  # ////////////////////////////////////////////////////////////////////////////
  - container:
  # ////////////////////////////////////////////////////////////////////////////
    - shell:
      - docker-compose-wrapper $scenario -p perception-$deploy_system_type-shell up --force-recreate -d perception-$deploy_system_type-shell
    # stopping containers
    - stop:
      - docker stop $(docker ps -a -q)
    # removing containers
    - rm:
      - docker rm -f $(docker ps -a -q)
