# ////////////////////////////////////////////////////////////////////////////
- robot:
  - basestation:
# ////////////////////////////////////////////////////////////////////////////

    - cd $SUBT_PATH/
    - pwd

    # ////////////////////////////////////////////////////////////////////////////
    # perform all tasks that involve 'building'
    - build:
    # ////////////////////////////////////////////////////////////////////////////

      # //////////////////////////////////////////////////////////////////////////
      - start:
      # //////////////////////////////////////////////////////////////////////////
        - common:
          - cd common/
          - rm -f .catkin_tools/profiles/profiles.yaml
          - catkin profile set ${deploybook_catkin_profile}
          - catkin build --force-cmake
        - basestation:
          - cd basestation/
          - rm -f .catkin_tools/profiles/profiles.yaml
          - catkin profile set ${deploybook_catkin_profile}
          - catkin build --force-cmake
        # TODO:
        # - launch:
        #   - cd $DEPLOY_SRC/operations/launch/
        #   - rm -f .catkin_tools/profiles/profiles.yaml
        #   - catkin profile set ${computer_type_t}-basestation
        #   - catkin build --force-cmake
        #   - catkin clean -b --yes

      # //////////////////////////////////////////////////////////////////////////
      - stop:
      # //////////////////////////////////////////////////////////////////////////
        - echo "Nothing to stop, everything is done."

    # ////////////////////////////////////////////////////////////////////////////
    # perform all tasks that involves 'launch'
    - launch:
    # ////////////////////////////////////////////////////////////////////////////
      - export launch_prefix="basestation"

      # //////////////////////////////////////////////////////////////////////////
      - start:
      # //////////////////////////////////////////////////////////////////////////
        - roscore:
          # start the tmux session
          - tmux new -s roscore -d
          # launch
          - tmux send -t roscore 'roscore' ENTER

        - gui:
          
          # ////////////////////////////////////////////////////////////////////
          # == OLD CODE, will go away ==
          # ////////////////////////////////////////////////////////////////////

          # # get launch configuration data
          # - export CONFIG_PATH="$SUBT_PATH/operations/launch/robot_launch_scripting/config/"
          # # parse config file for roslaunch params
          # - get_config_data() {
          #     CONFIG_FILE=$CONFIG_PATH/${1}.config;
          #     while IFS='' read -r line || [[ -n "$line" ]]; do
          #       if [ ! "${line:0:1}" == "#" ]; then
          #         config_data="$config_data $line ";
          #       fi
          #     done < "$CONFIG_FILE";
          #     echo ${config_data};
          #   }
          # - export -f get_config_data
          # - export config=robots/basestation/gui
          # - export config_data=$(get_config_data "$config")

          # start the tmux session
          - tmux new -s gui -d
          - tmux send -t launch_gui 'source $SUBT_PATH/../devel/basestation/setup.bash' ENTER
          # launch
          # - tmux send -t gui 'mon launch launch_subt ${launch_prefix}_gui.launch' ENTER
        
      # //////////////////////////////////////////////////////////////////////////
      - stop:
      # //////////////////////////////////////////////////////////////////////////
        - roscore:
          - tmux kill-session -t roscore
        - gui:
          - tmux kill-session -t gui
        
    # ////////////////////////////////////////////////////////////////////////////
    # helpful cleanup commands
    # ////////////////////////////////////////////////////////////////////////////
    - docker:
      - dangling:
        - docker rmi -f $(docker images -f "dangling=true" -q)