#!/usr/bin/env bash

# load header helper functions
. "$SUBT_PATH/operations/deploy/azurebooks/scripts/header.sh"
. "$(dirname $0)/.header.bash"

if chk_flag --help $@ || chk_flag help $@; then
  GL_TEXT_COLOR=$FG_LCYAN
  text
  title "Usage: $(basename $0) [flag] "
  text_color  "Flags:"
  text_color "      -help : shows usage message."
  text_color "About: "
  text_color "Show SSH Connections"
  text_color "    - Shows the configured ssh connections & if they are available to connect."
  text_color "For more help, please see the README.md or wiki."
  GL_TEXT_COLOR=$FG_DEFAULT
  exit_success
fi

# check for valid user inputs
if ! chk_flag -h $@ && ! chk_flag -t $@ ; then
  error "Missing host -h <arg> and window title -t <title> flags."
  exit_failure
fi

# //////////////////////////////////////////////////////////////////////////////
# @brief: script main entrypoint
# //////////////////////////////////////////////////////////////////////////////
title "Show SSH Connections\n"

# push script path
__dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
pushd $__dir

# check every connection in the user's ssh config
shopt -s nocasematch
for str in $(grep -i "^[^#\S]*Host\(name\)\?" ~/.ssh/config | paste -s -); do
  case "$str" in
    "Host")
      type=connection
      ;;
    "Hostname")
      type=hostname
      ;;
    *)
      case "$type" in
        # get the name of the connection & test out an ssh connection
        "connection")
          connection=$str
          if ssh -q -o BatchMode=yes -o ConnectTimeout=1 $connection exit 2>/dev/null; then
            printf "${GREEN}"
            printf "%30s %13s" "$connection" "OK."
            printf "\n${NC}"
          else
            printf "${RED}"
            printf "%30s %13s" "$connection" "FAIL"
            printf "\n${NC}"
          fi
          unset connection
        ;;
      esac
  esac
done

# cleanup & exit
exit_on_success
