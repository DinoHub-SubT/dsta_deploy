#!/usr/bin/env bash

# load header helper functions
. "$SUBT_PATH/operations/deploy/azurebooks/scripts/header.sh"
. "$(dirname $0)/.header.bash"

if chk_flag --help $@ || chk_flag help $@; then
  GL_TEXT_COLOR=$FG_LCYAN
  text
  title "Usage: $(basename $0) [flag] "
  text_color  "Flags:"
  text_color "      -help : shows usage message."
  text_color "About: "
  text_color "Show SSH Connections"
  text_color "    - Shows the configured ssh connections & if they are available to connect."
  text_color "For more help, please see the README.md or wiki."
  GL_TEXT_COLOR=$FG_DEFAULT
  exit_success
fi

# globals params
GL_SSH_CONFIG="$HOME/.ssh/config"

# check for an open ssh connection
function check_open_ssh_connection() {
  connection=$1
  if ssh -q -o BatchMode=yes -o ConnectTimeout=1 $connection exit 2>/dev/null; then
    printf "${FG_LCYAN} %30s %13s ${FG_DEFAULT} \n" "$connection" "OK."
  else
    printf "${FG_RED} %30s %13s ${FG_DEFAULT} \n" "$connection" "FAIL"
  fi
}

# display open ssh connections
function display() {
  cfile=$1
  # case insensitive match
  shopt -s nocasematch
  matched=false
  for str in $(grep -i "^[^#\S]*Host\(name\)\?" $cfile | paste -s -); do
    # check for connection
    if [ "$matched" = true ]; then
      check_open_ssh_connection "$str"
      matched=false
    fi
    # ssh connection string is after the'Host' matched tag
    [ "$str" = "Host" ] && matched=true;
  done
}

# traverse all ssh configuration files
function traverse() {
  cfile=$1
  text "$cfile \n"

  # base case, display for this configuration
  display $cfile

  # traverse all the included ssh configuration files
  matched=false
  for str in $(grep -i "^[^#\S]*Include\?" $cfile | paste -s -); do
    # traverse the include directory
    if [ "$matched" = true ]; then
      # get the ssh config file, directory path
      cdir="$(dirname $cfile)/$str"
      cdir=$(echo "$cdir" | sed 's/[*]\+//g')
      for next_cfile in $cdir/*; do
        newline
        traverse $next_cfile
      done
      matched=false
    fi

    # included ssh configuration file is after 'Include' matched tag
    [ "$str" == "Include" ] && matched=true;
  done
}

# //////////////////////////////////////////////////////////////////////////////
# @brief: script main entrypoint
# //////////////////////////////////////////////////////////////////////////////
title "Show SSH Connections\n"

# push script path
__dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
pushd $__dir

# trap ctrl-c and call ctrl_c
trap ctrl_c INT

# check every connection in the user's ssh config
traverse $GL_SSH_CONFIG

# cleanup & exit
exit_on_success
