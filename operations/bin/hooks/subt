#!/usr/bin/env bash

# load header helper functions
. "$SUBT_PATH/operations/bin/.header.bash"
. "$SUBT_PATH/operations/bin/hooks/.header.bash"
. "$SUBT_PATH/operations/bin/hooks/.auto_completion.bash"

# globals
GL_GIT_HOOKS_DIR=$SUBT_PATH/operations/bin/hooks/

# example:
# list all submodules
# git subt list -- lists all modules
# show the git subt status, no recursive?
# git subt status -ug -ua -c -l -s -d -b
# git subt status -ugv -uav -cmn -launch -sim -docker -basestation
# git subt status -r -ug # recursive
# git subt status -m base_node
# git subt fetch -r -ug -ua -c -l -s -d -b
# git subt fetch -r -ug -ua -c -l -s -d -b
# syncs all local branches with remote. i.e. does a hard reset
# git subt sync -r -ugv
# ??
# git subt pull -ugv
# git subt push -ugv
# git subt add /path/to/submodule
# git subt checkout -b branch name

# push to deploy, will push to all inter repos
# checkout to deploy, will push to all inter repos

# git checkout, will checkout the same branch in all the intermediate repos at that HEAD

# git pr will open a PR with only the repos with the local & remote branches

# go in the inter repo and do a `git add'
# go to top level and do a git push
  # -- git push with see all submodule added repos & commit them with dummy messages
  # -- then will commit the inter repo with those added modules
  # -- then let user continue with top level commit message
  # -- then ammend all commit messages in inter level w/ same message as top level
  # -- then amend top level with new updated inter-repo messages

# @brief display help usage message
__subt_help() {
  GL_TEXT_COLOR=$FG_LCYAN
  text
  text_color "usage: subt [command] [<arg>] "
  text_color
  text_color "commands:"
  text_color "git [subcommand] [<arg>] "
  text_color "    status   : Show the general git info for every submodule (inter and lower)."
  text_color "    sync     : Fetchs & Syncs the local branches with the remote branches."
  text_color "    reset    : Resets intermediate repo or submodule to detached HEAD."
  text_color "    clean    : Cleans an intermediate repo or submodule."
  text_color "    pr       : Create a pull request for top & intermeidate repo branches."
  text_color "    help, -h : View help usage message for each sub command."
  text_color "deploy [subcommand] [<arg>] "
  text_color "      -h, --help, help  : shows usage help for 'git subt'"
  text_color
  text_color "For more help, please see the README.md or wiki."
  GL_TEXT_COLOR=$FG_DEFAULT
}

# @brief evaluate which subcommand to switch and execute
__subt_subcmd_execute() {
  # check & execute the subt git subcommand

  if chk_flag status $@; then
    shift 2 # shift the 'git', 'info' tokens
    ($GL_GIT_HOOKS_DIR/status.bash $@)

  elif chk_flag sync $@; then
    shift 2 # shift the 'git', 'sync' tokens
    ($GL_GIT_HOOKS_DIR/sync.bash $@)
  elif chk_flag help $@; then
    __git_help
  fi
}

# //////////////////////////////////////////////////////////////////////////////
# @brief 'git subt' wrapper entrypoint
# //////////////////////////////////////////////////////////////////////////////
subt() {
  # execute actual git command (filter any 'git subt' subcommands)
  if chk_nth_flag 1 "git" "$@"; then
    # execute git subt main entrypoint
    __subt_subcmd_execute $@

    # shift the subt arguments (they are standard for all 'git subt' subcommands)
    # for arg do
    #   shift
    #   _chk_eq $arg "-a" || _chk_eq $arg "-bs" || _chk_eq $arg "-cm" || \
    #     _chk_eq $arg "-sim" || _chk_eq $arg "-uav" || _chk_eq $arg "-ugv" \
    #     && continue
    #   set -- "$@" "$arg"
    # done

    # TODO: make this installed by everyone via ansible
    # git sync  -- add this to git config using ansible?
    # make sure to only do a git sync, when doing git status, not other commands?
    # have a docker image pull check too...

    # command git "$@"

  # execute 'git subt' subcommand
  elif chk_nth_flag 1 "deploy" "$@"; then
    echo "deploy?"
  elif chk_flag --help $@ || chk_flag help $@ || chk_flag -h $@; then
    __subt_help $@
    return 0
  fi
}

# enable tab autocompletion
complete -F _ac_subt_completion subt
