##################################################################################################
# builder yaml that install docker images for field robots, for planning & perception workspaces
##################################################################################################
- pwd
- 'export SRC_DIR=$PWD'
- cd $SRC_DIR/docker/scripts/

##################################################################################################
# planning worksapace docker images
##################################################################################################
- planning:
  # build all docker images
  - 'export BUILD_ARGS="--force" '
  - build:
    - osrf:
      - ./build.bash --env osrf/ros $BUILD_ARGS
      - ./build.bash --env osrf/osrf $BUILD_ARGS
    - subt:
      - ./build.bash --env subt/ros $BUILD_ARGS
      - ./build.bash --env subt/subt $BUILD_ARGS
  # clean all docker images
  - clean:
    # remove any non-named images
    - dangling:
      - docker rmi -f $(docker images -f "dangling=true" -q)
    - osrf:
      - ./clean.bash --env osrf/ros --force
      - ./clean.bash --env osrf/osrf --force
    - subt:
      - ./clean.bash --env subt/ros --force
      - ./clean.bash --env subt/subt --force

##################################################################################################
# perception worksapace docker images
##################################################################################################
- perception:
  ### cuda9 docker images
  - cuda9:
    - 'export BUILD_ARGS=" " '
    # build all docker images
    - build:
      - cuda:
        - ./build.bash --env tensorflow/cuda9/cuda $BUILD_ARGS
      - tensorflow:
        - ./build.bash --env tensorflow/cuda9/tensorflow $BUILD_ARGS
      - ros:
        - ./build.bash --env tensorflow/cuda9/ros $BUILD_ARGS
    # remove all docker images
    - clean:
        - cuda:
          - ./clean.bash --env tensorflow/cuda9/cuda --force
        - tensorflow:
          - ./clean.bash --env tensorflow/cuda9/tensorflow --force
        - ros:
          - ./clean.bash --env tensorflow/cuda9/ros --force
        # remove any non-named images
        - docker rmi -f $(docker images -f "dangling=true" -q)
  ### cuda10 docker images
  - cuda10:
    # build all docker images
    - build:
      - cuda:
        - ./build.bash --env tensorflow/cuda10/cuda --force
      - tensorflow:
        - ./build.bash --env tensorflow/cuda10/tensorflow --force
      - ros:
        - ./build.bash --env tensorflow/cuda10/ros --force
    # remove all docker images
    - clean:
        - cuda:
          - ./clean.bash --env tensorflow/cuda10/cuda --force
        - tensorflow:
          - ./clean.bash --env tensorflow/cuda10/tensorflow --force
        - ros:
          - ./clean.bash --env tensorflow/cuda10/ros --force
        # remove any non-named images
        - docker rmi -f $(docker images -f "dangling=true" -q)
